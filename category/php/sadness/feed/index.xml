<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Sadness &#8211; ovi.ro</title>
	<atom:link href="/category/php/sadness/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>ovi.ro</description>
	<lastBuildDate>Tue, 04 Apr 2017 07:43:30 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9</generator>
	<item>
		<title>Compare strings in PHP</title>
		<link>/php/sadness/compare-strings-in-php/</link>
		
		<dc:creator><![CDATA[Ovidiu Anicai]]></dc:creator>
		<pubDate>Tue, 04 Apr 2017 07:43:30 +0000</pubDate>
				<category><![CDATA[Sadness]]></category>
		<category><![CDATA[madness]]></category>
		<category><![CDATA[php]]></category>
		<category><![CDATA[strings]]></category>
		<guid isPermaLink="false">http://0v1.ro/?p=569</guid>

					<description><![CDATA[Just read a comment in the PHP documentation and had another PHP madness moment. It seems you have to be really, really careful when comparing strings that include numbers&#8230; &#160; Command \ PHP Version 7.0.0 &#8211; 7.1.3 5.4.4 &#8211; 5.6.30 &#8230; <a class="more" href="/php/sadness/compare-strings-in-php/">Read more &#187;</a>]]></description>
										<content:encoded><![CDATA[<p>Just read a <a href="http://php.net/manual/en/language.operators.comparison.php#114682">comment</a> in the PHP documentation and had another PHP madness moment.</p>
<p>It seems you have to be really, really careful when comparing strings that include numbers&#8230;</p>
<p>&nbsp;</p>
<table>
<tbody>
<tr>
<td width="800">Command \ PHP Version</td>
<td width="75">7.0.0 &#8211; 7.1.3</td>
<td width="83">5.4.4 &#8211; 5.6.30</td>
<td width="76">5.2.1 &#8211; 5.4.3</td>
</tr>
<tr>
<td>var_dump(&#8216;123&#8217; == &#8216;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 123&#8217;);</td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
</tr>
<tr>
<td>var_dump(&#8216;1e3&#8217; == &#8216;1000&#8217;);</td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
</tr>
<tr>
<td>var_dump(&#8216;+74951112233&#8217; == &#8216;74951112233&#8217;);</td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
</tr>
<tr>
<td>var_dump(&#8216;00000020&#8217; == &#8216;0000000000000000020&#8217;);</td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
</tr>
<tr>
<td>var_dump(&#8216;0X1D&#8217; == &#8217;29E0&#8242;);</td>
<td style="font-weight: 400;"><strong><span style="color: #ff0000;">FALSE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
</tr>
<tr>
<td>var_dump(&#8216;0xafebac&#8217; == &#8216;11529132&#8217;);</td>
<td style="font-weight: 400;"><strong><span style="color: #ff0000;">FALSE</span></strong></td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
</tr>
<tr>
<td>var_dump(&#8216;0xafebac&#8217; == &#8216;0XAFEBAC&#8217;);</td>
<td style="font-weight: 400;"><strong><span style="color: #ff0000;">FALSE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
</tr>
<tr>
<td>var_dump(&#8216;0xeb&#8217; == &#8216;+235e-0&#8217;);</td>
<td style="font-weight: 400;"><span style="color: #ff0000;"><strong>FALSE</strong></span></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
</tr>
<tr>
<td>var_dump(&#8216;0.235&#8217; == &#8216;+.235&#8217;);</td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
</tr>
<tr>
<td>var_dump(&#8216;0.2e-10&#8217; == &#8216;2.0E-11&#8217;);</td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #339966;">TRUE</span></strong></td>
</tr>
<tr>
<td>var_dump(&#8216;61529519452809720693702583126814&#8217; == &#8216;61529519452809720000000000000000&#8217;);</td>
<td style="font-weight: 400;"><strong><span style="color: #ff0000;">FALSE</span></strong></td>
<td style="font-weight: 400;"><strong><span style="color: #ff0000;">FALSE</span></strong></td>
<td style="font-weight: 400;"><span style="color: #339966;"><strong>TRUE</strong></span></td>
</tr>
</tbody>
</table>
<p>https://3v4l.org/rop5S</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Strings array access issue</title>
		<link>/php/sadness/strings-array-access-issue/</link>
		
		<dc:creator><![CDATA[Ovidiu Anicai]]></dc:creator>
		<pubDate>Thu, 28 May 2015 14:28:06 +0000</pubDate>
				<category><![CDATA[Sadness]]></category>
		<guid isPermaLink="false">http://0v1.ro/?p=466</guid>

					<description><![CDATA[What would you expect for this script to output? error_reporting(E_ALL); ini_set('display_errors',1); $text = "abc"; var_dump(isset($text['key'])); var_dump((bool) $text['key']); Maybe a notice? maybe some false there.. But if you have in mind PHP logic.. you surely know.. So, $text is a string &#8230; <a class="more" href="/php/sadness/strings-array-access-issue/">Read more &#187;</a>]]></description>
										<content:encoded><![CDATA[<p>What would you expect for this script to output?</p>
<pre class="lang:php decode:true">
error_reporting(E_ALL); ini_set('display_errors',1);

$text = "abc";

var_dump(isset($text['key']));
var_dump((bool) $text['key']);
</pre>
<p>Maybe a notice? maybe some false there..<br />
But if you have in mind PHP logic.. you surely know..</p>
<p>So, $text is a string and string characters can be accessed with $text[1] this is &#8220;b&#8221;<br />
Then if you try $text[&#8216;key&#8217;] PHP will typecast your &#8216;key&#8217; to an integer (0) then $text[0] exists!</p>
<p>The second step is simple.. $text[0] is &#8220;a&#8221; and PHP logic again &#8211; any non empty string is true!</p>
<p>Output is:</p>
<pre class="lang:php decode:true">
bool(true);
bool(true);
</pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Foreach with reference</title>
		<link>/php/sadness/foreach-with-reference/</link>
		
		<dc:creator><![CDATA[Ovidiu Anicai]]></dc:creator>
		<pubDate>Thu, 28 May 2015 13:17:07 +0000</pubDate>
				<category><![CDATA[Sadness]]></category>
		<guid isPermaLink="false">http://0v1.ro/?p=454</guid>

					<description><![CDATA[If you iterate over an array with &#038; you should unset the value variable after to not modify the array accidentally after. $array = array('a', 'b', 'c', 'd'); foreach($array as $key=>&#038;$value) { if ($key = 3) { // change d &#8230; <a class="more" href="/php/sadness/foreach-with-reference/">Read more &#187;</a>]]></description>
										<content:encoded><![CDATA[<p>If you iterate over an array with &#038; you should unset the value variable after to not modify the array accidentally after.</p>
<pre class="lang:php decode:true">
$array = array('a', 'b', 'c', 'd');

foreach($array as $key=>&$value) {
    if ($key = 3) {
        // change d to x
        $value = 'x';
    }
}
// this will affect the $array to
$value = 'z';
// $array = array('a', 'b', 'c', 'z');
</pre>
<p>Should do like this</p>
<pre class="lang:php decode:true">
$array = array('a', 'b', 'c', 'd');

foreach($array as $key=>&$value) {
    if ($key = 3) {
        // change d to x
        $value = 'x';
    }
}
unset($value);
$value = 'z';  // if you do this accidentally you get a notice but no effect on the array
// $array = array('a', 'b', 'c', 'x');
</pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>PHP echo print question</title>
		<link>/php/sadness/php-echo-print-question/</link>
		
		<dc:creator><![CDATA[Ovidiu Anicai]]></dc:creator>
		<pubDate>Tue, 19 May 2015 16:06:17 +0000</pubDate>
				<category><![CDATA[Sadness]]></category>
		<guid isPermaLink="false">http://0v1.ro/?p=435</guid>

					<description><![CDATA[Working with echo or print is very easy in PHP. At the begining it might be harder to understand concatenations or operations order, but after you master them is really easy. But there are some cases where you wonder how &#8230; <a class="more" href="/php/sadness/php-echo-print-question/">Read more &#187;</a>]]></description>
										<content:encoded><![CDATA[<p>Working with echo or print is very easy in PHP.<br />
At the begining it might be harder to understand concatenations or operations order, but after you master them is really easy.<br />
But there are some cases where you wonder how does this work ?!?!</p>
<h2>What does this print?</h2>
<pre class="lang:php decode:true">echo 1 . print(2+3) . 1+2;</pre>
<p>Don&#8217;t rush to conclusions to fast.. Make sure you remember what echo and print do and what is the order of operations.</p>
<p>Hint 1: print also returns after the opration is done<br />
Hint 2: echo and print are language constructs, not functions.</p>
<h2 style="cursor: pointer;" onClick="document.getElementById('echoPrintSolution').style.display = 'block'">Click here to see the solution</h2>
<div id="echoPrintSolution" style="display: none;">
<p>You might not know that print will be executed first, but if you do, that is not enough.<br />
So, the order of operations is:<br />
1. evaluate <span style="color: #ff0000;">2+3</span> = 5<br />
2. evaluate <span style="color: #ff0000;">1+2</span> = 3<br />
3. evaluate print arguments: <span style="color: #ff0000;">5 . 3</span> = 53 &#8211; don&#8217;t forget, print is not a function, is a language construct as echo!<br />
4. will actually print <span style="color: #ff0000;">53</span> and return true<br />
5. evaluate echo arguments: concatenation between <span style="color: #ff0000;">1</span> and <span style="color: #ff0000;">true</span> = 11<br />
6. echoes <span style="color: #ff0000;">11</span></p>
<p>So the result is: <span style="color: #ff0000;">5311</span>
</div>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
