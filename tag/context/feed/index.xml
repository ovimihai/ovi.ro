<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>context &#8211; ovi.ro</title>
	<atom:link href="/tag/context/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>ovi.ro</description>
	<lastBuildDate>Sun, 03 Feb 2013 20:42:41 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.9</generator>
	<item>
		<title>Variables</title>
		<link>/php/variables/</link>
		
		<dc:creator><![CDATA[Ovidiu Anicai]]></dc:creator>
		<pubDate>Sun, 03 Feb 2013 20:42:41 +0000</pubDate>
				<category><![CDATA[PHP]]></category>
		<category><![CDATA[PHP Basics]]></category>
		<category><![CDATA[ZCE Training]]></category>
		<category><![CDATA[$this]]></category>
		<category><![CDATA[context]]></category>
		<category><![CDATA[global]]></category>
		<category><![CDATA[scope]]></category>
		<category><![CDATA[superglobal]]></category>
		<category><![CDATA[variable variables]]></category>
		<category><![CDATA[variables]]></category>
		<guid isPermaLink="false">http://ovi.ro/?p=280</guid>

					<description><![CDATA[Variables are preceded in PHP by a dollar sign $ and the rules for naming are: [a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*   or in plain english names of variables can begin with letters or underscores and then you can put other numbers letters and underscores. Letters here &#8230; <a class="more" href="/php/variables/">Read more &#187;</a>]]></description>
										<content:encoded><![CDATA[<p>Variables are preceded in PHP by a dollar sign $ and the rules for naming are: <strong><em>[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*</em></strong><em>   or in plain english names of variables can begin with letters or underscores and then you can put other numbers letters and underscores. Letters here can include extended <a title="ASCII TABLE" href="http://www.ascii-code.com/" target="_blank" rel="noopener noreferrer">ascii</a> characters from 7F to FF (127 &#8211; 255) so don&#8217;t blame me if you find letters like ç, † or ½</em></p>
<p>When declaring a variable, in PHP you don&#8217;t need to specify a type, it&#8217;s enough to give it a name and assign it a value. $var = &#8220;string value&#8221;;</p>
<p>Variables are <strong>case sensitive</strong> and some variable names are reserved: <strong>$this </strong>( used inside objects)<strong>, $_SERVER, $GLOBALS, $_SESSION, $_COOKIE, $_POST, $_GET, $_REQUEST, $_ENV </strong>(global variables).</p>
<p>When variables are not assigned values they behave as in the table above, but an E_NOTICE error is issued, and it is not recomanded to not properly initialize them or check if they are set with <strong>isset() </strong>function.</p>
<table class="with-borders">
<tbody>
<tr>
<th>Situation</th>
<th>Value</th>
</tr>
<tr>
<td>
<pre class="lang:default decode:true">var_dump($unset_var);</pre>
</td>
<td> <strong>NULL</strong></td>
</tr>
<tr>
<td>
<pre class="lang:default decode:true  crayon-selected">echo($unset_bool ? "true\n" : "false\n");</pre>
</td>
<td> <strong>false</strong></td>
</tr>
<tr>
<td>
<pre class="lang:default decode:true">$unset_str .= 'abc';
var_dump($unset_str);</pre>
</td>
<td><strong> abc</strong>   ( &#8221; concatenated with &#8216;abc&#8217; )</td>
</tr>
<tr>
<td>
<pre class="lang:default decode:true crayon-selected">$unset_int += 25;
var_dump($unset_int);</pre>
</td>
<td> <strong>25</strong>  ( 0+25 )</td>
</tr>
<tr>
<td>
<pre class="lang:default decode:true">$unset_float += 1.25;
var_dump($unset_float);</pre>
</td>
<td><strong> 1.25</strong>  ( 0+ 1.25)</td>
</tr>
<tr>
<td>
<pre class="lang:default decode:true">$unset_arr[3] = "def";
var_dump($unset_arr);</pre>
</td>
<td> <strong>array(1) {  [3]=&gt;  string(3) &#8220;def&#8221; }</strong><br />
adds empty array() with array with element key: 3, value &#8220;def&#8221;</td>
</tr>
<tr>
<td>
<pre class="lang:default decode:true">$unset_obj-&gt;foo = 'bar';
var_dump($unset_obj);</pre>
</td>
<td><strong> object(stdClass)#1 (1) {  [&#8220;foo&#8221;]=&gt;  string(3) &#8220;bar&#8221; }</strong><br />
initializes an stdClass() object and assigns parameter foo the value &#8216;bar&#8217;</td>
</tr>
</tbody>
</table>
<h3>Variable variables</h3>
<p>In PHP you even can have dynamic names for variables! You can create a variable using another variable value as it&#8217;s name</p>
<pre class="lang:default decode:true">$varName = 'newvar';
$$varName = 'abc';

echo $newvar;</pre>
<p>Variable variables can be defined as above or if you want to use an array key as name, you have to use curly brackets to avoid the ambiguity</p>
<pre class="lang:default decode:true">$a = array('hello', 'world');
${$a[1]} = 'value';

echo $world;</pre>
<p>It works with object properties too</p>
<pre class="lang:default decode:true">$var = 'property';
$obj-&gt;$var;

// or even
$obj-&gt;{$start . $stop};</pre>
<p>If this is not too much already, try looking at the <a title="Example #1 - Variable variables - PHP Manual" href="http://php.net/manual/en/language.variables.variable.php" target="_blank" rel="noopener noreferrer">Example #1 in the PHP manual</a></p>
<h3>Variable scope</h3>
<p>Variable scope refers to the availability of variables in different contexts.</p>
<pre class="lang:default decode:true">$globalVar = 1;

function abc(){
  $localVar = 2;
  $globalVar = 2; // this is still local, and it doesn't affect the variable outside the function
}
abc();
echo $globalVar; // echoes 1 !</pre>
<p>Inside functions you can access global variables using the keyword <strong>global</strong></p>
<pre class="lang:default decode:true">$var = 1;

function do_something(){
  global $var;
  $var = 2;
}
do_something();

echo $var; // echoes 2</pre>
<p>Global variables can be accessed using special PHP predefined variable <strong>$GLOBALS</strong></p>
<pre class="lang:default decode:true">$var = 2;

function do_something(){
  $GLOBAL['var'] = 3;
}
do_something();

echo $var; // echoes 3</pre>
<p>Some of the predefined PHP variables are <strong>superglobals</strong> and can be accessed anywhere without the global keyword: $GLOBALS, $_SERVER, $_GET, $_POST, $_FILES, $_COOKIE, $_SESSION, $_REQUEST, $_ENV;</p>
<p>&nbsp;</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
